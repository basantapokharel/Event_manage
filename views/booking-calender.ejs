<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hall Booking System</title>

    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 20px;
            background-color: #f4f4f9;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        label {
            font-weight: bold;
            display: block;
            margin: 10px 0 5px;
        }

        select,
        input,
        button {
            margin: 10px 0;
            padding: 10px;
            width: 100%;
            max-width: 400px;
            font-size: 16px;
        }

        #calendarContainer {
            margin-top: 20px;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
        }

        .booking {
            padding: 8px;
            border-radius: 4px;
            margin-bottom: 10px;
            color: white;
        }

        .booking.confirmed {
            background-color: #e57373;
            /* Red for confirmed bookings */
        }

        .booking.pending {
            background-color: #fbc02d;
            /* Yellow for pending bookings */
            color: black;
        }

        .no-bookings {
            color: #555;
            font-size: 18px;
            text-align: center;
        }

        .time-slot-selector {
            margin-top: 20px;
        }

        #submitButton {
            margin-top: 20px;
            background-color: #4caf50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
        }

        #submitButton:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

        .validation-error {
            color: red;
            font-size: 14px;
            margin-top: 5px;
        }

        #bookingInfo {
            margin-top: 10px;
        }
    </style>

</head>

<body>
    <h1>Hall Booking System</h1>

    <div>
        <label for="roomSelect">Select Hall:</label>
        <select id="roomSelect">
            <option value="" disabled selected>Select a hall</option>
            <% halls.forEach(hall=> { %>
                <option value="<%= hall.id %>" data-capacity="<%= hall.capacity %>" <% if (typeof selectedHallId
                    !=='undefined' && hall.id.toString()===selectedHallId) { %> selected <% } %> >
                        <%= hall.name %>
                </option>
                <% }); %>
        </select>
    </div>

    <div>
        <label for="datePicker">Select Date:</label>
        <input type="date" id="datePicker">
    </div>

    <!-- Calendar View -->
    <div id="calendarContainer">
        <h2>Existing Bookings</h2>
        <div class="existing-bookings">
            <p class="no-bookings">Please select a hall and date to view bookings.</p>
        </div>
    </div>

    <!-- Custom Time Slot Selection -->
    <div class="time-slot-selector">
        <label for="startTime">Start Time:</label>
        <input type="time" id="startTime" disabled>

        <label for="endTime">End Time:</label>
        <input type="time" id="endTime" disabled>
        <div id="endTimeError" class="validation-error"></div>

        <label for="bookingInfo">Booking Info:</label>
        <input type="text" id="bookingInfo" placeholder="Enter booking details" disabled>

        <label for="capacity">Capacity:</label>
        <input type="number" id="capacity" placeholder="Capacity" disabled>
    </div>

    <button id="submitButton" type="submit" disabled>Book Now</button>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const roomSelect = document.getElementById("roomSelect");
            const datePicker = document.getElementById("datePicker");
            const calendarContainer = document.querySelector(".existing-bookings");
            const startTimeInput = document.getElementById("startTime");
            const endTimeInput = document.getElementById("endTime");
            const bookingInfoInput = document.getElementById("bookingInfo");
            const capacityInput = document.getElementById("capacity");

            const endTimeError = document.getElementById("endTimeError");
            const submitButton = document.getElementById("submitButton");

            let selectedHall = null;
            let selectedDate = null;
            let existingBookings = [];

            //Function to update the capacity input based on selected hall
            function updateCapacity() {
                const selectedOption = roomSelect.options[roomSelect.selectedIndex];
                const hallCapacity = selectedOption.getAttribute("data-capacity");
                capacityInput.setAttribute("max", hallCapacity);
                capacityInput.placeholder = `Max capacity: ${hallCapacity}`;
            }

            function toggleInputs(enable) {
                const inputs = [startTimeInput, endTimeInput, bookingInfoInput, capacityInput];
                inputs.forEach(input => input.disabled = !enable);
            }

            function fetchBookings() {
                if (selectedHall && selectedDate) {
                    fetch(`/get-bookings?hallId=${selectedHall}&date=${selectedDate}`)
                        .then(response => response.json())
                        .then(data => {
                            existingBookings = data.sort((a, b) => a.startTime.localeCompare(b.startTime));
                            renderBookings(existingBookings);
                            toggleInputs(true); // Enable inputs once bookings are loaded
                        })
                        .catch(err => console.error("Error fetching bookings:", err));
                }
            }

            function renderBookings(bookings) {
                calendarContainer.innerHTML = ""; // Clear previous bookings

                if (bookings.length > 0) {
                    bookings.forEach(booking => {
                        const bookingDiv = document.createElement("div");
                        bookingDiv.classList.add("booking");
                        bookingDiv.classList.add(booking.status === "pending" ? "pending" : "confirmed");
                        bookingDiv.innerHTML = `
                            <strong>${booking.startTime} - ${booking.endTime}</strong>
                            <p>${booking.info || "No additional info"}</p>
                        `;
                        calendarContainer.appendChild(bookingDiv);
                    });
                } else {
                    const noBookingsMessage = document.createElement("p");
                    noBookingsMessage.className = "no-bookings";
                    noBookingsMessage.textContent = "No bookings exits for this date.";
                    calendarContainer.appendChild(noBookingsMessage);
                }
            }

            function validateTimeSlot() {
                const startTime = startTimeInput.value;
                const endTime = endTimeInput.value;
                console.log("startTime", startTime);
                console.log("endTime", endTime);

                endTimeError.textContent = "";

                if (!startTime || !endTime) {
                    submitButton.disabled = true;
                    return;
                }

                if (endTime <= startTime) {
                    endTimeError.textContent = "End time must be after start time.";
                    submitButton.disabled = true;
                    return;
                }

                const isOverlap = existingBookings.some(booking => {
                    return (
                        (startTime >= booking.startTime && startTime < booking.endTime) ||
                        (endTime > booking.startTime && endTime <= booking.endTime) ||
                        (startTime <= booking.startTime && endTime >= booking.endTime)
                    );
                });

                if (isOverlap) {
                    console.log("Time slot overlaps with an existing booking.");
                    endTimeError.textContent = "Selected time slot overlaps with an existing booking.";
                    submitButton.disabled = true;
                } else {
                    console.log("Time slot is not overlapping");
                    submitButton.disabled = false;
                }
            }


            roomSelect.addEventListener("change", (e) => {
                selectedHall = e.target.value;
                console.log("Hall selected:", e.target.value);
                updateCapacity(); // Update capacity when the hall is changed
                fetchBookings(); // Fetch bookings based on the selected hall
            });

            datePicker.addEventListener("change", (e) => {
                selectedDate = e.target.value;
                fetchBookings();
            });

            capacityInput.addEventListener("input", (e) => {
                const maxCapacity = capacityInput.getAttribute("max");
                //maxCapacity is of string type 
                if (parseInt(e.target.value, 10) > parseInt(maxCapacity, 10)) {
                    e.target.value = maxCapacity; // Restrict the value to max
                }
            });

            startTimeInput.addEventListener("change", validateTimeSlot);
            endTimeInput.addEventListener("change", validateTimeSlot);

            if (roomSelect.value) {
                selectedHall = roomSelect.value;
                console.log("Hall selected:", roomSelect.value);
                updateCapacity(); // Update capacity when the hall is changed
                fetchBookings(); // Fetch bookings based on the selected hall
            }



            // Submit button logic for booking
            submitButton.addEventListener("click", () => {
                const startTime = startTimeInput.value;
                const endTime = endTimeInput.value;
                const bookingInfo = bookingInfoInput.value;
                const capacity = capacityInput.value;

                // Check if booking info and capacity are entered
                if (!bookingInfo || !capacity) {
                    alert("Please enter all required details: booking info and capacity.");
                    return; // Prevent form submission if not filled
                }

                // Prepare the data to send in the booking request
                const bookingData = {
                    hallId: selectedHall,
                    date: selectedDate,
                    startTime: startTime,
                    endTime: endTime,
                    info: bookingInfo,
                    capacity: capacity
                };

                // Send the booking request to the server
                fetch("/book", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(bookingData)
                })
                    .then(response => response.json())
                    .then(data => {
                        
                        roomSelect.value = "";
                        datePicker.value = "";
                        startTimeInput.value = "";
                        endTimeInput.value = "";
                        bookingInfoInput.value = "";
                        capacityInput.value = "";

                        window.location.href = "/viewuserBookings";
                    }
                    )
                    .catch(err => {
                        console.error("Error booking hall:", err);
                        alert("An error occurred while booking the hall.");
                    });
            });

        });





    </script>
</body>

</html>